#! /usr/bin/env python

import socket
import time
import argparse


#       Server                                   Client
# 
#  ┌─────────────┐                          ┌─────────────┐
#  │  socket()   │                          │  socket()   │
#  └──────┬──────┘                          └──────┬──────┘
#         │                                        │
#         ▼                                        │
#  ┌─────────────┐                                 │
#  │   bind()    │                                 │
#  └──────┬──────┘                                 │
#         │                                        │
#         ▼                                        │
#  ┌─────────────┐                                 │
#  │  listen()   │                                 │
#  └──────┬──────┘                                 │
#         │                                        │
#         ▼                                        │
#  ┌─────────────┐                                 │
#  │  accept()   │                                 │
#  └──────┬──────┘                                 │
#         │                                        │
#         ▼                                        │
#  wait for connection                             ▼
#         │                request          ┌─────────────┐
#         │◄────────────────────────────────┤   connect() │
#         │                                 └──────┬──────┘
#         │                                        │
#         │                                        │
#         │                                        │
#         │                                        │
#         ▼                                        ▼
# ┌───────────────────┐     response        ┌─────────────┐
# │  send timestamp() ├────────────────────►│   recv()    │
# └───────────────────┘                     └─────────────┘

def print_socket_attr(sock: socket.socket) -> None:
    print(f"socket family: { sock.family }")
    print(f"socket type: {sock.type}")
    print(f"socket protocol: {sock.proto}")

def get_RFC868_time_protocol_timestamp() -> int:
    """ Returns the time in seconds since midnight on January first 1900 as a 32 bit integer.
        Implements the Time Protocol as described in RFC860.
        https://tools.ietf.org/html/rfc868
    """
    NUMBER_OF_SECONDS_FROM_JANUARY_FIRST_1900_TO_BEGINNING_OF_UNIX_EPOCH: int = 2208988800
    time_since_beginning_of_unix_epoch: int = int(time.time())
    return NUMBER_OF_SECONDS_FROM_JANUARY_FIRST_1900_TO_BEGINNING_OF_UNIX_EPOCH + time_since_beginning_of_unix_epoch


parser = argparse.ArgumentParser()

parser.add_argument(
    "-p",
    "--port",
    type=int,
    default=7890,
    help= "server port number"
)

args = parser.parse_args()

HOST: str = "127.0.0.1"
PORT: int = args.port

print(f"HOST: {HOST}, PORT: {PORT}")
print(f"time is {get_RFC868_time_protocol_timestamp()}")

# # create a BSD socket, which uses TCP/IP for communication
# sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, socket.getprotobyname('tcp'))
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
    sock.bind((HOST, PORT))
    MAXIMUM_NUMBER_OF_ALLOWED_QUEABLE_CONNECTIONS: int = 5
    sock.listen(MAXIMUM_NUMBER_OF_ALLOWED_QUEABLE_CONNECTIONS)

    while True: # server loop
        connection, addr = sock.accept()
        with connection:
            print(f"got a connection request from: {addr}")
            tp_timestamp: int = get_RFC868_time_protocol_timestamp()
            connection.send(bytes(str(tp_timestamp), "utf-8"))



